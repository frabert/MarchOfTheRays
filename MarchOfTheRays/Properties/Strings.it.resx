<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Apply" xml:space="preserve">
    <value>Applica</value>
  </data>
  <data name="AskSaveChanges" xml:space="preserve">
    <value>Salvare le modifiche al documento?</value>
  </data>
  <data name="CameraPosition" xml:space="preserve">
    <value>Posizione:</value>
  </data>
  <data name="CameraSettings" xml:space="preserve">
    <value>Impostazioni telecamera</value>
  </data>
  <data name="CameraTarget" xml:space="preserve">
    <value>Obiettivo:</value>
  </data>
  <data name="CameraUpDirection" xml:space="preserve">
    <value>Direzione verticale:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>&amp;Copia</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>&amp;Taglia</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>&amp;Elimina</value>
  </data>
  <data name="Deselect" xml:space="preserve">
    <value>&amp;Deseleziona</value>
  </data>
  <data name="EditMenu" xml:space="preserve">
    <value>&amp;Modifica</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>&amp;Esci</value>
  </data>
  <data name="FileMenu" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="FitToScreen" xml:space="preserve">
    <value>&amp;Adatta allo schermo</value>
  </data>
  <data name="FitToSelection" xml:space="preserve">
    <value>Adatta alla &amp;selezione</value>
  </data>
  <data name="LivePreview" xml:space="preserve">
    <value>Anteprima &amp;dinamica</value>
  </data>
  <data name="MaxIterations" xml:space="preserve">
    <value>Numero massimo di iterazioni:</value>
  </data>
  <data name="MaxRenderDist" xml:space="preserve">
    <value>Distanza massima di rendering:</value>
  </data>
  <data name="MtrFile" xml:space="preserve">
    <value>Documento March of the Rays</value>
  </data>
  <data name="NewDocument" xml:space="preserve">
    <value>&amp;Nuovo</value>
  </data>
  <data name="NumberInputInvalid" xml:space="preserve">
    <value>Valore numerico non valido</value>
  </data>
  <data name="OpenDocument" xml:space="preserve">
    <value>&amp;Apri</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>&amp;Incolla</value>
  </data>
  <data name="PngImage" xml:space="preserve">
    <value>PNG</value>
  </data>
  <data name="PreviewFormTitle" xml:space="preserve">
    <value>Anteprima</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>&amp;Ripeti</value>
  </data>
  <data name="RenderingEngineSettings" xml:space="preserve">
    <value>Impostazioni motore di rendering</value>
  </data>
  <data name="RenderingEpsilon" xml:space="preserve">
    <value>Epsilon:</value>
  </data>
  <data name="RenderingMenu" xml:space="preserve">
    <value>&amp;Rendering</value>
  </data>
  <data name="RenderPreview" xml:space="preserve">
    <value>&amp;Renderizza anteprima</value>
  </data>
  <data name="RenderSettings" xml:space="preserve">
    <value>&amp;Impostazioni</value>
  </data>
  <data name="RenderSettingsTitle" xml:space="preserve">
    <value>Impostazioni di rendering</value>
  </data>
  <data name="ResetZoom" xml:space="preserve">
    <value>&amp;Ripristina ingrandimento</value>
  </data>
  <data name="SaveDocument" xml:space="preserve">
    <value>&amp;Salva</value>
  </data>
  <data name="SaveDocumentAs" xml:space="preserve">
    <value>Salva &amp;con nome</value>
  </data>
  <data name="SaveImage" xml:space="preserve">
    <value>Salva immagine</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>&amp;Seleziona tuto</value>
  </data>
  <data name="ShowPreviewWindow" xml:space="preserve">
    <value>Mostra finestra d'&amp;anteprima</value>
  </data>
  <data name="StatusCycleFound" xml:space="preserve">
    <value>Il grafo contiene un ciclo.</value>
  </data>
  <data name="StatusInvalidNode" xml:space="preserve">
    <value>Il grafo contiene un nodo non valido.</value>
  </data>
  <data name="StatusReady" xml:space="preserve">
    <value>Pronto.</value>
  </data>
  <data name="StatusRendering" xml:space="preserve">
    <value>Rendering in corso...</value>
  </data>
  <data name="StatusSearchingForCycles" xml:space="preserve">
    <value>Ricerca di cicli nel grafo in corso...</value>
  </data>
  <data name="StepSize" xml:space="preserve">
    <value>Dimensione passi:</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>&amp;Annulla</value>
  </data>
  <data name="ViewMenu" xml:space="preserve">
    <value>&amp;Visualizza</value>
  </data>
  <data name="ZoomIn" xml:space="preserve">
    <value>&amp;Aumenta ingrandimento</value>
  </data>
  <data name="ZoomOut" xml:space="preserve">
    <value>Riduci &amp;ingrandimento</value>
  </data>
  <data name="HelpPanel" xml:space="preserve">
    <value>Aiuto</value>
  </data>
  <data name="Panels" xml:space="preserve">
    <value>&amp;Pannelli</value>
  </data>
  <data name="PropertiesPanel" xml:space="preserve">
    <value>Proprietà</value>
  </data>
  <data name="ShowHelpPanel" xml:space="preserve">
    <value>Mostra pannello &amp;aiuto</value>
  </data>
  <data name="ShowPropertiesPanel" xml:space="preserve">
    <value>Mostra pannello p&amp;roprietà</value>
  </data>
  <data name="CannotOpenFileCaption" xml:space="preserve">
    <value>Errore nella lettura del file</value>
  </data>
  <data name="CannotOpenFileText" xml:space="preserve">
    <value>Si è verificato un errore durante la lettura del file {0}</value>
  </data>
  <data name="CannotWriteFileCaption" xml:space="preserve">
    <value>Errore nella scrittura del file</value>
  </data>
  <data name="CannotWriteFileText" xml:space="preserve">
    <value>Si è verificato un errore durante la scrittura del file {0}</value>
  </data>
  <data name="MainGraph" xml:space="preserve">
    <value>Grafo principale</value>
  </data>
  <data name="ShowMainGraph" xml:space="preserve">
    <value>Visualizza grafo principale</value>
  </data>
  <data name="BinaryOperation" xml:space="preserve">
    <value>Operazione binaria</value>
  </data>
  <data name="Expressions" xml:space="preserve">
    <value>Espressioni</value>
  </data>
  <data name="Float2Constant" xml:space="preserve">
    <value>Costante vettoriale 2D</value>
  </data>
  <data name="Float3Constant" xml:space="preserve">
    <value>Costante vettoriale 3D</value>
  </data>
  <data name="Float4Constant" xml:space="preserve">
    <value>Costante vettoriale 4D</value>
  </data>
  <data name="FloatConstant" xml:space="preserve">
    <value>Costante scalare</value>
  </data>
  <data name="InsertCustomBinaryNode" xml:space="preserve">
    <value>Operazione binaria personalizzata</value>
  </data>
  <data name="InsertCustomNode" xml:space="preserve">
    <value>Operazione unaria personalizzata</value>
  </data>
  <data name="Primitives" xml:space="preserve">
    <value>Primitive geometriche</value>
  </data>
  <data name="UnaryOperation" xml:space="preserve">
    <value>Operazione unaria</value>
  </data>
  <data name="CustomNode" xml:space="preserve">
    <value>Nodo personalizzato</value>
  </data>
  <data name="Float3Constructor" xml:space="preserve">
    <value>Costruttore vettore 3D</value>
  </data>
  <data name="ExportNode" xml:space="preserve">
    <value>&amp;Esporta nodo</value>
  </data>
  <data name="ImportNode" xml:space="preserve">
    <value>&amp;Importa nodo</value>
  </data>
  <data name="NodeFile" xml:space="preserve">
    <value>Nodo March of the Rays</value>
  </data>
  <data name="Box" xml:space="preserve">
    <value>Parallelepipedo</value>
  </data>
  <data name="Sphere" xml:space="preserve">
    <value>Sfera</value>
  </data>
  <data name="Intersection" xml:space="preserve">
    <value>Intersezione</value>
  </data>
  <data name="SolidOperations" xml:space="preserve">
    <value>Operazioni solide</value>
  </data>
  <data name="Subtraction" xml:space="preserve">
    <value>Sottrazione</value>
  </data>
  <data name="Union" xml:space="preserve">
    <value>Unione</value>
  </data>
  <data name="Swizzle" xml:space="preserve">
    <value>Swizzle</value>
  </data>
</root>